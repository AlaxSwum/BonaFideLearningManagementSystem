# Generated by Django 5.1.4 on 2025-01-23 15:52

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "assignments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "db_table": "categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CodeQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField()),
                ("answer", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "code_questions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name_plural": "Course Categories",
                "db_table": "course_categories",
            },
        ),
        migrations.CreateModel(
            name="CourseSubcategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name_plural": "Course Subcategories",
                "db_table": "course_subcategories",
            },
        ),
        migrations.CreateModel(
            name="Curriculum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("reading", "Reading"),
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("resource_url", models.URLField(max_length=255)),
                ("order", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "curriculum",
                "ordering": ["course", "order"],
            },
        ),
        migrations.CreateModel(
            name="ExtendedLearners",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("target_audience", models.TextField()),
                ("skills_needed", models.TextField()),
                ("learning_outcomes", models.TextField()),
                ("career_goals", models.TextField()),
                ("participation_knowledge", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Extended Learners",
                "db_table": "extended_learners",
            },
        ),
        migrations.CreateModel(
            name="Instructor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expertise", models.CharField(max_length=255)),
                (
                    "rating",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("rating_count", models.PositiveIntegerField(default=0)),
                ("bio", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "instructors",
                "ordering": ["-rating", "-rating_count"],
            },
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option_text", models.TextField()),
                ("is_correct", models.BooleanField(default=False)),
                (
                    "why_correct",
                    models.TextField(
                        blank=True,
                        help_text="Explanation for why this option is correct",
                        null=True,
                    ),
                ),
                (
                    "why_not_correct",
                    models.TextField(
                        blank=True,
                        help_text="Explanation for why this option is incorrect",
                        null=True,
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "options",
                "ordering": ["question", "order"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[("MCQ", "Multiple Choice"), ("TF", "True/False")],
                        default="MCQ",
                        max_length=3,
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "questions",
                "ordering": ["quiz", "order"],
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("total_questions", models.PositiveIntegerField()),
                ("max_score", models.PositiveIntegerField()),
                (
                    "duration",
                    models.PositiveIntegerField(help_text="Duration in minutes"),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Quizzes",
                "db_table": "quizzes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Subcategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Subcategories",
                "db_table": "subcategories",
                "ordering": ["category", "name"],
            },
        ),
        migrations.AlterField(
            model_name="course",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="role",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="email_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["role"], name="role_idx"),
        ),
        migrations.AddField(
            model_name="assignment",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assignments",
                to="api.course",
            ),
        ),
        migrations.AddField(
            model_name="codequestion",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="code_questions",
                to="api.course",
            ),
        ),
        migrations.AddField(
            model_name="coursecategory",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.category"
            ),
        ),
        migrations.AddField(
            model_name="coursecategory",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.course"
            ),
        ),
        migrations.AddField(
            model_name="coursesubcategory",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.course"
            ),
        ),
        migrations.AddField(
            model_name="curriculum",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="curriculum_items",
                to="api.course",
            ),
        ),
        migrations.AddField(
            model_name="extendedlearners",
            name="course",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="extended_learners",
                to="api.course",
            ),
        ),
        migrations.AddField(
            model_name="instructor",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instructor_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="option",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="api.question",
            ),
        ),
        migrations.AddField(
            model_name="quiz",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="quizzes",
                to="api.course",
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="quiz",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="api.quiz",
            ),
        ),
        migrations.AddField(
            model_name="subcategory",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="subcategories",
                to="api.category",
            ),
        ),
        migrations.AddField(
            model_name="coursesubcategory",
            name="subcategory",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.subcategory"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coursecategory",
            unique_together={("course", "category")},
        ),
        migrations.AlterUniqueTogether(
            name="curriculum",
            unique_together={("course", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="option",
            unique_together={("question", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together={("quiz", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="subcategory",
            unique_together={("name", "category")},
        ),
        migrations.AlterUniqueTogether(
            name="coursesubcategory",
            unique_together={("course", "subcategory")},
        ),
    ]
